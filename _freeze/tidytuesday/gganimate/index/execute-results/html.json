{
  "hash": "f4ef970d13b5431cfb8f4c39d07534ec",
  "result": {
    "markdown": "---\ntitle: \"Animated visualization of popular names using GGAnimate\"\ndate: 1/3/2023\nauthor:\n  - name: Deepsha Menghani \n    url: https://github.com/deepshamenghani\ntitle-block-banner: true\nformat:\n  html:\n    theme: flatly\n    code-fold: false\n    code-tools: true\n    toc: false\n    number-sections: true\nlink-citations: yes\ncategories: [code, analysis, visualization, gganimate]\nimage: \"popular_names_Male.gif\"\n---\n\n\nIn this post, I will create a racing bar chart using ggplot2 for the most popular names in the last decade.\n\nThe data comes from the \"Babynames\" package by Hadley Wickham.\n\n::: callout-tip\nYou can find my github code repository [here](https://github.com/deepshamenghani/tidytuesday/tree/master/2023/Week1_BYOD).\n:::\n\n## Load libraries\n\n\n::: {.cell paged.print='false'}\n\n```{.r .cell-code}\n# For loading Tidy Tuesday data\nlibrary(babynames)\n\n# EDA\nlibrary(tidyverse)\nlibrary(DT)\n\n# Interactive visualization\nlibrary(gganimate)\n```\n:::\n\n\n## Load data\n\nI am using the \"babynames\" dataset from the \"Babynames\" package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbabynames\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,924,665 × 5\n    year sex   name          n   prop\n   <dbl> <chr> <chr>     <int>  <dbl>\n 1  1880 F     Mary       7065 0.0724\n 2  1880 F     Anna       2604 0.0267\n 3  1880 F     Emma       2003 0.0205\n 4  1880 F     Elizabeth  1939 0.0199\n 5  1880 F     Minnie     1746 0.0179\n 6  1880 F     Margaret   1578 0.0162\n 7  1880 F     Ida        1472 0.0151\n 8  1880 F     Alice      1414 0.0145\n 9  1880 F     Bertha     1320 0.0135\n10  1880 F     Sarah      1288 0.0132\n# … with 1,924,655 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndatatable(babynames %>% \n  head())\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-aec4ef7f9ac70f83acfc\" style=\"width:100%;height:auto;\" class=\"datatables html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-aec4ef7f9ac70f83acfc\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\"],[1880,1880,1880,1880,1880,1880],[\"F\",\"F\",\"F\",\"F\",\"F\",\"F\"],[\"Mary\",\"Anna\",\"Emma\",\"Elizabeth\",\"Minnie\",\"Margaret\"],[7065,2604,2003,1939,1746,1578],[0.07238359,0.02667896,0.02052149,0.01986579,0.01788843,0.0161672]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>year<\\/th>\\n      <th>sex<\\/th>\\n      <th>name<\\/th>\\n      <th>n<\\/th>\\n      <th>prop<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,4,5]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n## Clean and rank the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nranked_by_year <- babynames %>% \n  mutate(prop = round(prop*100, 2)) %>% \n  select(sex, year, name, var = prop) %>% \n  group_by(sex, year) %>% \n  arrange(year, -var) %>% \n  mutate(rank = 1:n()) %>% \n  filter(rank <= 10)\n```\n:::\n\n\n## Function to filter the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_filter <- function(ranked_by_year, sex_filter = \"M\", year_min = 1998) {\n  ranked_by_year %>% \n    filter(sex == sex_filter,\n           year >= year_min)\n}\n```\n:::\n\n\n## Function to create the ggplot for filtered variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_rect_function <- function(data, title_text) {\n  data %>% \n    ggplot() +\n    aes(xmin = 0,\n        xmax = var) +\n    aes(ymin = rank - 0.5,\n        ymax = rank + 0.5,\n        y = rank) +\n    theme_minimal() +\n    facet_wrap(~ year) +\n    geom_rect(alpha = 0.3, color = \"black\") +\n    aes(fill = name) +\n    scale_x_continuous(\n      limits = c(-2, 1.4)\n    ) +\n    geom_label(col = \"gray12\",\n              hjust = \"right\",\n              aes(label = name, fill = name),\n              x = -0.2) +\n    scale_y_reverse() +\n    labs(fill = NULL) +\n    labs(title = title_text,\n         y = \"\",\n         x = \"Percentage of names\") +\n    facet_null() +\n    scale_x_continuous(\n      limits =c(-0.7, 2)\n    ) +\n    geom_text(x = 1.6 , y = -10,\n              family = \"Times\",\n              aes(label = as.character(year)),\n              size = 20, col = \"grey18\") +\n    aes(group = name) +\n    theme(legend.position = \"none\",\n          axis.text.y = element_blank()) \n}\n```\n:::\n\n\n## Create plots for filtered Male and Female names\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_rect_M <- ranked_by_year %>% \n  data_filter(\"M\", 1998) %>% \n  plot_rect_function(title_text = \"Most popular male baby names between 1998-2017\")\n\nplot_rect_F <- ranked_by_year %>% \n  data_filter(\"F\", 1998) %>% \n  plot_rect_function(title_text = \"Most popular female baby names between 1998-2017\")\n```\n:::\n\n\n## Animate with GGAnimate over time\n\nWhile the above plot looks extremely scrambled, applying gganimate and looking at it over time will clean it up.\n\n### Male names between 1998 and 2017\n\nThe name \"Jacob\" went from rank 1 to rank 10 by 2017 but stayed on the charts throughout!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames_prop_animated_M <- plot_rect_M  +\n  gganimate::transition_time(year)\n\nanimate(names_prop_animated_M, duration =30, fps = 10, width = 900, height = 600, renderer = gifski_renderer(), end_pause = 100, start_pause = 30)\n\nanim_save(file = \"popular_names_Male.gif\")\n```\n:::\n\n\n![](popular_names_Male.gif)\n\n### Female names between 1998 and 2017\n\nThe name \"Emily\" went from rank 1 to not surviving the top 10 chart by 2017.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames_prop_animated_F <- plot_rect_F  +\n  gganimate::transition_time(year)\n\nanimate(names_prop_animated_F, duration =30, fps = 10, width = 900, height = 600, renderer = gifski_renderer(), end_pause = 100, start_pause = 30)\n\nanim_save(file = \"popular_names_Female.gif\")\n```\n:::\n\n\n![](popular_names_Female.gif)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\r\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/datatables-binding-0.25/datatables.js\"></script>\r\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\r\n<link href=\"../../site_libs/dt-core-1.11.3/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\r\n<link href=\"../../site_libs/dt-core-1.11.3/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/dt-core-1.11.3/js/jquery.dataTables.min.js\"></script>\r\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}